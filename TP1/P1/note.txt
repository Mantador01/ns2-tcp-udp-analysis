1.3 :
Un lien full-duplex permet une communication bidirectionnelle simultan√©e, tandis qu'une politique Drop Tail abandonne les nouveaux paquets arrivant lorsque la file d'attente est pleine, sans discrimination.

1.4 :
Dtransmission = TaillePaquet / D√©bitLien
TaillePaquet (trace) = 1000 octets -> 8000 bits, D√©bitLien (tcl) = 1Mbps -> 10^6 b/s

DebitApplicatif = TaillePaquet / IntervalleEntre2transmissions
IntervalleEntre2transmissions = 0.005s. ici

Le d√©lai minimum de bout-en-bout pour un paquet UDP est de 18 ms, et le d√©bit applicatif du flux UDP au niveau du n≈ìud ùëõ0 est de 1.6 Mbps.

1.5 :
Le fichier de traces out.tr enregistre les √©v√©nements r√©seau de la simulation avec des champs comme : type d'√©v√©nement (+ pour envoi, r pour r√©ception, d pour perte), temps, n≈ìud source/destination, 
type de paquet, taille, flux ID, et num√©ros de s√©quence. Vous pouvez l'utiliser pour :

Calculer les d√©lai de bout-en-bout (diff√©rence entre + et r),
Mesurer le taux de perte (√©v√©nements d),
√âvaluer le volume de trafic (nombre de paquets envoy√©s et re√ßus).
Les figures fournies montrent un exemple avec des flux CBR et TCP pour aider √† l'interpr√©tation.

1.6 :
Le paquet UDP num√©ro de s√©quence 10 a √©t√© g√©n√©r√© √† 0,55 secondes et a commenc√© son √©mission sur le lien √† 0,58 secondes.
+ 0.55 0 1 cbr 1000 ------- 1 0.0 1.0 10 10
- 0.58 0 1 cbr 1000 ------- 1 0.0 1.0 10 10

1.7:
r 0.598 0 1 cbr 1000 ------- 1 0.0 1.0 10 10

Temps d'attente = Temps de sortie - Temps d'entr√©e
                = 0.58 - 0.55
                = 0.03 secondes

Temps d‚Äô√©mission et d√©lai = Temps de r√©ception - Temps de sortie
                          = 0.598 - 0.58
                          = 0.018 secondes

1.8 :
D√©lai de bout-en-bout = Temps de r√©ception - Temps d'entr√©e
                      = 0.598 - 0.55
                      = 0.048 secondes

Le d√©lai de bout-en-bout calcul√© pour le 10·µâ paquet UDP est de 48 ms, ce qui est sup√©rieur au d√©lai minimum de 18 ms mentionn√© dans la question d'avant. Cette diff√©rence s‚Äôexplique 
par des facteurs dynamiques du r√©seau, tels que la congestion ou le temps d'attente dans les files d'attente, qui augmentent le d√©lai r√©el par rapport au d√©lai th√©orique minimum.

2.4 :
Le premier est le num√©ro de s√©quence : Unique par flux, D√©fini par le protocole ou l'application, ex :Suivi d‚Äôun flux sp√©cifique.
et le deuxieme l'ID du paquet : Unique dans toute la simulation, Attribu√© par le simulateur NS-2, Suivi global du paquet (traversant diff√©rents n≈ìuds et flux).

2.5 :
grep " tcp " out.tr
On vois 1040 car on inclus les en-t√™tes TCP/IP qui font 20 chacune : 1000 + 20 + 20 = 1040

2.6 :
On ne peux pas seulement a partir de la trace, il faut passer par le calcul avec la Taille du paquet(trace) et le d√©bit du lien(tcl), Temission = TaillePaquet/DebitLien

2.7 :
grep " 100$" out.tr
grep "^+.* 100$" out.tr  # Pour afficher les √©v√©nements de g√©n√©ration
grep "^r.* 100$" out.tr  # Pour afficher les √©v√©nements de r√©ception
grep " 100$" out.tr | wc -l # Pour compter

2.8 :
grep " tcp " out.tr | awk '$2 > 3 && $3 == 0 {print $0}'

r 3.00728 0 2 tcp 1040 ------- 0 0.0 3.0 92 417
+ 3.009333 0 2 tcp 1040 ------- 0 0.0 3.0 93 421
- 3.009333 0 2 tcp 1040 ------- 0 0.0 3.0 93 421
+ 3.020213 0 2 tcp 1040 ------- 0 0.0 3.0 94 424
- 3.020213 0 2 tcp 1040 ------- 0 0.0 3.0 94 424
r 3.023493 0 2 tcp 1040 ------- 0 0.0 3.0 93 421
r 3.034373 0 2 tcp 1040 ------- 0 0.0 3.0 94 424
+ 3.036427 0 2 tcp 1040 ------- 0 0.0 3.0 95 428
- 3.036427 0 2 tcp 1040 ------- 0 0.0 3.0 95 428
...

n0
Num s√©quence : 93
 + : 3.009333
 - : 3.009333
 Tattente = (T-) - (T+) = 0s

 n2
 + : 3.023493s
 - : 3.036427s
 Tattente = 0.012934s

2.9:
Non, les d√©lais d‚Äôattente ne seront pas les m√™mes pour tous les paquets TCP. Cela s‚Äôexplique par plusieurs facteurs, notamment l‚Äôoccupation des files d‚Äôattente, le taux d‚Äôarriv√©e des paquets, 
et le taux de service des liens. De plus, le protocole TCP ajuste dynamiquement son d√©bit en fonction de l‚Äô√©tat du r√©seau (congestion ou pertes), ce qui provoque des variations dans les d√©lais. 
Dans le cas de la coexistence avec UDP, les paquets TCP peuvent √©galement subir des d√©lais suppl√©mentaires dus √† la concurrence pour la bande passante. Ainsi, chaque paquet TCP peut rencontrer 
des conditions diff√©rentes, entra√Ænant des d√©lais d‚Äôattente variables.

2.10 :
   - Si le lien n_2 -> n_3 est occup√© par d‚Äôautres paquets (TCP ou UDP), les paquets UDP devront attendre dans la file jusqu‚Äô√† ce que le lien soit libre.

3.3 :
Tperte(%) = (NbPaquetPerdu / NbPaquetsEnvoy√©s) x 100
o√π NbPaquetPerdu = NbPaquetsEnvoy√©s - NbPaquetsRe√ßu

Pour calculer le taux de paquets UDP perdus entre les instants t1 et t2, la proc√©dure consiste √† identifier tous les √©v√©nements o√π des paquets UDP sont envoy√©s ("+") 
et perdus ("d") pendant cette p√©riode. Le taux de perte est alors d√©termin√© en divisant le nombre total de paquets perdus par le nombre total de paquets envoy√©s durant l'intervalle, puis en multipliant 
ce rapport par 100 pour obtenir un pourcentage.

3.4 :
./script.awk 1 2 out.tr
Intervalle: [1, 2]
Paquets envoy√©s: 250
Paquets re√ßus: 188
Paquets perdus: 62
Taux de perte: 24.80%

./script.awk 2 3 out.tr
Intervalle: [2, 3]
Paquets envoy√©s: 250
Paquets re√ßus: 184
Paquets perdus: 66
Taux de perte: 26.40%

./script.awk 3 4 out.tr
Intervalle: [3, 4]
Paquets envoy√©s: 250
Paquets re√ßus: 187
Paquets perdus: 63
Taux de perte: 25.20%  

3.5 :
Tdelai = Tarriv√© - Tenvoie
Tmoy = Somme Tdelai / Npaquets
o√π Npaquets = nb paquets re√ßu dans la periode [t1,t2]

Lorsque l'√©v√©nement "+" est d√©tect√© (envoi de paquet) et qu'il concerne un paquet UDP ("cbr"), le temps d'envoi est enregistr√© dans un tableau, index√© par le num√©ro de s√©quence du paquet.

Lorsque l'√©v√©nement "r" est d√©tect√© (r√©ception d'un paquet) et qu'il concerne un paquet UDP, le script v√©rifie si le num√©ro de s√©quence du paquet a un temps d'envoi enregistr√©. 
Si oui, le d√©lai est calcul√© comme la diff√©rence entre le temps de r√©ception et le temps d'envoi. Ce d√©lai est ajout√© √† la somme des d√©lais, et le compteur de paquets est incr√©ment√©.

√Ä la fin du traitement, le d√©lai moyen est calcul√© en divisant la somme des d√©lais par le nombre de paquets re√ßus.


3.6 :
awk -v t1=1 -v t2=2 -f calculate.awk out.tr
P√©riode [1, 2] :
  Paquets re√ßus   : 201
  D√©lai moyen     : 0.074697 s

awk -v t1=2 -v t2=3 -f calculate.awk out.tr
P√©riode [2, 3] :
  Paquets re√ßus   : 197
  D√©lai moyen     : 0.072577 s

awk -v t1=3 -v t2=4 -f calculate.awk out.tr
P√©riode [3, 4] :
  Paquets re√ßus   : 201
  D√©lai moyen     : 0.075951 s

3.7 :
Intervalle: [1, 2]
Paquets envoy√©s: 250
Paquets re√ßus: 188
Paquets perdus: 62
Taux de perte: 24.80%

Intervalle: [2, 3]
Paquets envoy√©s: 250
Paquets re√ßus: 187
Paquets perdus: 63
Taux de perte: 25.20%

Intervalle: [3, 4]
Paquets envoy√©s: 250
Paquets re√ßus: 188
Paquets perdus: 62
Taux de perte: 24.80%

P√©riode [1, 2] :
  Paquets re√ßus   : 287
  D√©lai moyen     : 0.507605 s

P√©riode [2, 3] :
  Paquets re√ßus   : 290
  D√©lai moyen     : 0.754534 s

P√©riode [3, 4] :
  Paquets re√ßus   : 252
  D√©lai moyen     : 0.772303 s

CONCLUSION :

Buffer 10 :
Les taux de perte sont l√©g√®rement variables entre les intervalles, allant de 24.80% √† 26.40%.
Buffer 100 :
Les taux de perte sont similaires ou identiques √† ceux obtenus avec un buffer de 10.

Les taux de pertes sont plutot similaire, avec un buffer plus grand (100), les taux de perte n'ont pas chang√© de mani√®re significative, car la capacit√© d'absorption du r√©seau a atteint sa limite. 
Les pertes sont principalement dues √† la congestion dans d'autres parties du r√©seau, comme les goulots d'√©tranglement.

Buffer 10 :
Les d√©lais moyens pour les p√©riodes sont courts : 0.072577 s √† 0.075951 s.
Buffer 100 :
Les d√©lais moyens augmentent consid√©rablement, allant jusqu'√† 0.772303 s.

Le buffer plus grand peut contenir davantage de paquets en attente, r√©duisant les pertes, mais augmentant le temps d‚Äôattente des paquets en file.
Cela entra√Æne des d√©lais beaucoup plus √©lev√©s, surtout dans des p√©riodes o√π la congestion est forte (par exemple, entre 2s et 3s, o√π la charge TCP et UDP est active).